import { contracts } from 'shared/client';
import { object, string, number, boolean, literal, union } from 'zod';

export const txReceived = object({
  hash: string(),
  token_amount: number(),
  sol_amount: number(),
  type: union([literal('BUY'), literal('SELL'), literal('DEPLOY'), literal('MIGRATION')]),
  rate: number(),
  timestamp: number(),
  pnl: number().nullable(),
  user_info: contracts.UserResponseShort,
  token_info: object({
    is_favourite: boolean().nullable(),
    is_creator: boolean(),
    id: number(),
    address: string(),
    created_by: object({
      user_id: number(),
      user_nickname: string(),
      user_photo_hash: string().nullable(),
      subscribed: boolean().nullable(),
      subscribers: number(),
    }),
    name: string(),
    photo_hash: string(),
    symbol: string(),
    description: string(),
    trade_started: boolean(),
    trade_finished: boolean(),
    last_tx_timestamp: number(),
    holders: number(),
    mcap: number(),
    mcap_diff_24h: number(),
    rate: number(),
    prev_ath: number(),
    creation_date: number(),
    ath: number(),
    messages: number(),
    alltime_buy_txes: number(),
    alltime_sell_txes: number(),
    volume_24h: number(),
    is_nsfw: boolean(),
    twitter: string().nullable(),
    telegram: string().nullable(),
    youtube: string().nullable(),
    website: string().nullable(),
    is_streaming: boolean(),
    mcap_diff_5m: number(),
    mcap_diff_1h: number(),
    mcap_diff_6h: number(),
    alltime_volume: number(),
    alltime_buy_volume: number(),
    alltime_sell_volume: number(),
    alltime_buyers: number(),
    alltime_sellers: number(),
    alltime_makers: number(),
    slug: string().nullable(),
    virtual_tokens: number(),
    virtual_sol: number(),
    real_tokens: number(),
    real_sol: number(),
    bounding_curve: number(),
    deployer_wallet: string().nullable(),
    maker: string().nullable(),
  }),
  token_stats: contracts.SPLTokenStatsResponse,
});
